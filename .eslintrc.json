{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "next/core-web-vitals",
    "prettier"
  ],
  "plugins": ["simple-import-sort"],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "import/prefer-default-export": [
      "off",
      { "target": "any" }
    ],
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            // eslint-disable-next-line max-len
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Side effect imports.
          ["^\\u0000"],
          // Packages + absolute imports. `react`, `next` related packages come first.
          ["^react", "^next*", "^@?\\w"],
          // Internal packages.
          [
            // eslint-disable-next-line max-len
            "^@/(components|dictionaries)(/.*|$)"
          ],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"]
        ]
      }
    ],
    "react/jsx-props-no-spreading": ["error", {
      "html": "ignore",
      "exceptions": ["Component", "Text"]
    }],
    "react/function-component-definition": ["error", { "namedComponents": "arrow-function" }],
    "react/require-default-props": "off"
  }
}
